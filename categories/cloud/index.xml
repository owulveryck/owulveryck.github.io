<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>cloud on Unladen swallow - Olivier Wulveryck</title><link>https://owulveryck.github.io/categories/cloud.html</link><description>Recent content in cloud on Unladen swallow - Olivier Wulveryck</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Olivier Wulveryck</copyright><lastBuildDate>Tue, 28 Feb 2017 20:57:38 +0100</lastBuildDate><atom:link href="https://owulveryck.github.io/categories/cloud/index.xml" rel="self" type="application/rss+xml"/><item><title>To go and touch Linda&#39;s Lisp</title><link>https://owulveryck.github.io/2017/02/28/to-go-and-touch-lindas-lisp.html</link><pubDate>Tue, 28 Feb 2017 20:57:38 +0100</pubDate><guid>https://owulveryck.github.io/2017/02/28/to-go-and-touch-lindas-lisp.html</guid><description>The title is not a typo nor dyslexia. I will really talk about Lisp.
In a previous post I explained my will to implement the dining of the philosophers with Linda in GO.
The ultimate goal is to use a distributed and abstract language to go straight from the design to the runtime of an application.
The problem I&amp;rsquo;ve faced I want to use a GO implementation for the Linda language because a go binary is a container by itself.</description></item></channel></rss>