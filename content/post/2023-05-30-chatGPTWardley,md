---
title: "ChatGPT, Wardley and Go"
date: 2023-05-30T21:23:17+02:00
lastmod: 2023-05-30T21:23:17+02:00
draft: false
keywords: []
description: "This article describes how I use the wardleyToGo SDK to create a plugin in Go for ChatGPT (to display Wardley Maps)"
tags: []
categories: []
author: "Olivier Wulveryck"

# You can also close(false) or open(true) something for this content.
# P.S. comment can only be closed
comment: true
toc: true
autoCollapseToc: false
# You can also define another contentCopyright. e.g. contentCopyright: "This is another copyright."
contentCopyright: false
reward: false
mathjax: false
---

In this article, I explain:
- how to create a ChatGPT plugin with Go
- how to validate the configuration with [CUE](cuelang.org)
- how to create a basic API usable with ChatGPT
- how to display SVG images within chatGPT (more a do and don't)

## Introduction

I use ChatGPT on a daily basis as an assistant, not as a dictionary or an encyclopedia. 
I seek solutions to problems and am aware that I will find them myself. 
The role of ChatGPT is to assist me and help the solutions emerge from my mind. 
I ask questions, and with its knowledge, it shapes the way I think to converge towards the solutions.

For most strategic problems, I use the tools and techniques from Wardley Mapping, including:

- The value chain (with user needs on top and a few other doctrine principles)
- The evolution theory
- The climatic patterns

Building a map has value, and the challenge of positioning the various components on the map itself brings a lot of value.

While ChatGPT is not aware of the spatial representation, it can provide rationales about the placement. 
However, as a human, a visual representation is very helpful.

Therefore, as a geek, I started thinking about a plugin that would enable ChatGPT to draw a map.

In a previous article, I introduced wardleyToGo, an SDK for building Wardley Maps using Go code. 
As a ChatGPT subscriber, I can write a plugin for GPT-4.

This article is a journey that explains how I built a plugin to draw my maps, how it works, what I discovered, and more.

You may want to read this article if:

- You are a curious Wardley Mapper.
- You are a ChatGPT user and want to be aware of the upcoming possibilities.
- You are a Go developer and want to be familiar with the plumbing required to create a plugin for ChatGPT."

## How a plugin works




### Golang plumbing

#### Create and validate the `aiplugin.json`

#### Create and serve the OpenAPI

- **The easy way**

- **The Geeky way**

#### Network plumbing
- serving from localhost
- tunneling with ngrok 

## Designing the API

### Creating a basic endpoint to display evolution axis

### Testing the plugin

### Displaying the SVG, tips and tricks


## Conclusion