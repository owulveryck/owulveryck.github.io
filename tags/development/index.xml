<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development on Unladen swallow - Olivier Wulveryck</title><link>https://owulveryck.github.io/tags/development.html</link><description>Recent content in Development on Unladen swallow - Olivier Wulveryck</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Olivier Wulveryck</copyright><lastBuildDate>Tue, 10 Nov 2015 08:56:36 +0100</lastBuildDate><atom:link href="https://owulveryck.github.io/tags/development/index.xml" rel="self" type="application/rss+xml"/><item><title>IaaS-like RESTfull API based on microservices</title><link>https://owulveryck.github.io/2015/11/10/iaas-like-restfull-api-based-on-microservices.html</link><pubDate>Tue, 10 Nov 2015 08:56:36 +0100</pubDate><guid>https://owulveryck.github.io/2015/11/10/iaas-like-restfull-api-based-on-microservices.html</guid><description>Abstracts Recently, I&amp;rsquo;ve been looking at the principles of a middleware layer and especially on how a RESTFULL API could glue different IT services together.
I am reading more and more about the &amp;ldquo;API economy&amp;rdquo;
I&amp;rsquo;ve also seen this excellent video made by Mat Ryer about how to code an API in GO and why go would be the perfect language to code such a portal.
The problem I&amp;rsquo;m facing is that in the organization I&amp;rsquo;m working for, the developments are heterogeneous and therefore you can find ruby teams as well as python teams and myself as a go team (That will change in the future anyway) The key point is that I would like my middleware to serve as an entry point to the services provided by the department.</description></item><item><title>Ruby / ZeroMQ / GO</title><link>https://owulveryck.github.io/2015/10/22/ruby-/-zeromq-/-go.html</link><pubDate>Thu, 22 Oct 2015 20:40:36 +0200</pubDate><guid>https://owulveryck.github.io/2015/10/22/ruby-/-zeromq-/-go.html</guid><description>Abtract I really like go as a programming language. It is a good tool to develop web restful API service.
On the other hand, ruby and its framework rails has also been wildly used to achieve the same goal.
Therefore we may be facing a &amp;ldquo;legacy&amp;rdquo; ruby developpement that we would like to connect to our brand new go framework. 0MQ may be a perfect choice for intefacing the two languages.</description></item></channel></rss>