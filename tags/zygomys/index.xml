<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>zygomys on Unladen swallow - Olivier Wulveryck</title><link>https://owulveryck.github.io/tags/zygomys/</link><description>Recent content in zygomys on Unladen swallow - Olivier Wulveryck</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>Olivier Wulveryck</copyright><lastBuildDate>Mon, 13 Mar 2017 20:54:27 +0100</lastBuildDate><atom:link href="https://owulveryck.github.io/tags/zygomys/index.xml" rel="self" type="application/rss+xml"/><item><title>Linda&#39;s evalc, a (tuple)space oddity</title><link>https://owulveryck.github.io/2017/03/13/lindas-evalc-a-tuplespace-oddity/</link><pubDate>Mon, 13 Mar 2017 20:54:27 +0100</pubDate><guid>https://owulveryck.github.io/2017/03/13/lindas-evalc-a-tuplespace-oddity/</guid><description>For a change, I will start with a good soundtrack
(youtube version for those who are spotify-less)
This is my third article about the distributed coordination language Linda.
The final target of the work is to use this coordination mechanism to deploy and maintain applications based on the description of their topology (using, for example, TOSCA as a DSL).
Last time, I introduced a lisp based language (zygomys) as an embedded programing mechanism to describe the business logic.</description></item><item><title>To go and touch Linda&#39;s Lisp</title><link>https://owulveryck.github.io/2017/02/28/to-go-and-touch-lindas-lisp/</link><pubDate>Tue, 28 Feb 2017 20:57:38 +0100</pubDate><guid>https://owulveryck.github.io/2017/02/28/to-go-and-touch-lindas-lisp/</guid><description>The title is not a typo nor dyslexia. I will really talk about Lisp.
In a previous post I explained my will to implement the dining of the philosophers with Linda in GO.
The ultimate goal is to use a distributed and abstract language to go straight from the design to the runtime of an application.
The problem I&amp;rsquo;ve faced I want to use a GO implementation for the Linda language because a go binary is a container by itself.</description></item></channel></rss>